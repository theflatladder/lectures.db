Системы управления базами данных
================================

.. seealso:: `<https://ru.wikipedia.org/wiki/Система_управления_базами_данных>`_

**Система управления базами данных (СУБД)** — совокупность программных и
лингвистических средств общего или специального назначения, обеспечивающих
управление созданием и использованием баз данных.

Основные функции СУБД
---------------------

* управление данными во внешней памяти (на дисках);
* управление данными в оперативной памяти с использованием дискового кэша;
* журнализация изменений, резервное копирование и восстановление базы данных
  после сбоев;
* поддержка языков БД (язык определения данных, язык манипулирования данными).

Обычно современная СУБД содержит следующие компоненты:

* **ядро**, которое отвечает за управление данными во внешней и оперативной
  памяти и журнализацию,
* **процессор языка базы данных**, обеспечивающий оптимизацию запросов на
  извлечение и изменение данных и создание, как правило, машинно-независимого
  исполняемого внутреннего кода,
* **подсистему поддержки времени исполнения**, которая интерпретирует программы
  манипуляции данными, создающие пользовательский интерфейс с СУБД
* а также **сервисные программы** (внешние утилиты), обеспечивающие ряд
  дополнительных возможностей по обслуживанию информационной системы.

Классификации СУБД
------------------

По модели данных
^^^^^^^^^^^^^^^^

Иерархические
"""""""""""""

Используется представление базы данных в виде древовидной (иерархической) структуры,
состоящей из объектов (данных) различных уровней.

Между объектами существуют связи, каждый объект может включать в себя несколько объектов
более низкого уровня. Такие объекты находятся в отношении предка (объект более близкий к корню)
к потомку (объект более низкого уровня), при этом возможна ситуация, когда объект-предок не имеет
потомков или имеет их несколько, тогда как у объекта-потомка обязательно только один предок.
Объекты, имеющие общего предка, называются близнецами (в программировании применительно к структуре
данных дерево устоялось название братья).

Иерархической базой данных является файловая система, состоящая из корневого каталога,
в котором имеется иерархия подкаталогов и файлов.

Примеры: Caché, Google App Engine Datastore API.

Сетевые
"""""""

Сетевые базы данных подобны иерархическим, за исключением того,
что в них имеются указатели в обоих направлениях, которые соединяют родственную информацию.

Примеры: Caché.

Реляционные
"""""""""""

Практически все разработчики современных приложений,
предусматривающих связь с системами баз данных, ориентируются на реляционные СУБД.
По оценке Gartner в 2013 году рынок реляционных СУБД составлял 26 млрд долларов с годовым
приростом около 9%, а к 2018 году рынок реляционных СУБД достигнет 40 млрд долларов.
В настоящее время абсолютными лидерами рынка СУБД являются компании Oracle, IBM и Microsoft,
с общей совокупной долей рынка около 90%, поставляя такие системы как Oracle Database, IBM DB2
и Microsoft SQL Server.

Объектно-ориентированные
""""""""""""""""""""""""

Управляют базами данных, в которых данные моделируются в виде объектов, их атрибутов, методов и классов.

Этот вид СУБД позволяет работать с объектами баз данных так же, как с объектами в программировании в
объектно-ориентированных языках программирования. ООСУБД расширяет языки программирования, прозрачно
вводя долговременные данные, управление параллелизмом, восстановление данных, ассоциированные запросы и
другие возможности.

Примеры: GemStone.

Объектно-реляционные
""""""""""""""""""""

Этот тип СУБД позволяет через расширенные структуры баз данных и язык запросов использовать возможности
объектно-ориентированного подхода: бъекты, классы и наследование.

Зачастую все те СУБД, которые называются реляционными, являются, по факту, объектно-реляционными.

В данном курсе мы будем, в первую очередь, гооврить об этом виде СУБД.

Примеры: PostgreSQL, DB2, Oracle, Microsoft SQL Server.


По степени распределённости
^^^^^^^^^^^^^^^^^^^^^^^^^^^

* Локальные СУБД (все части локальной СУБД размещаются на одном компьютере)
* Распределённые СУБД (части СУБД могут размещаться на двух и более компьютерах).

По способу доступа к БД
^^^^^^^^^^^^^^^^^^^^^^^

Файл-серверные
""""""""""""""

В файл-серверных СУБД файлы данных располагаются централизованно на файл-сервере.
СУБД располагается на каждом клиентском компьютере (рабочей станции).
Доступ СУБД к данным осуществляется через локальную сеть.
Синхронизация чтений и обновлений осуществляется посредством файловых блокировок.
Преимуществом этой архитектуры является низкая нагрузка на процессор файлового сервера.
Недостатки: потенциально высокая загрузка локальной сети;
затруднённость или невозможность централизованного управления;
затруднённость или невозможность обеспечения таких важных характеристик как высокая надёжность,
высокая доступность и высокая безопасность.
Применяются чаще всего в локальных приложениях, которые используют функции управления БД;
в системах с низкой интенсивностью обработки данных и низкими пиковыми нагрузками на БД.

На данный момент файл-серверная технология считается устаревшей,
а её использование в крупных информационных системах — недостатком.

Примеры: Microsoft Access, Paradox, dBase, FoxPro, Visual FoxPro.

Клиент-серверные
""""""""""""""""

Клиент-серверная СУБД располагается на сервере вместе с БД и осуществляет доступ к БД
непосредственно, в монопольном режиме.
Все клиентские запросы на обработку данных обрабатываются клиент-серверной СУБД централизованно.
Недостаток клиент-серверных СУБД состоит в повышенных требованиях к серверу.
Достоинства: потенциально более низкая загрузка локальной сети;
удобство централизованного управления;
удобство обеспечения таких важных характеристик как высокая надёжность,
высокая доступность и высокая безопасность.

Примеры: Oracle, Firebird, Interbase, IBM DB2, Informix, MS SQL Server,
Sybase Adaptive Server Enterprise, PostgreSQL, MySQL, Caché, ЛИНТЕР.

Встраиваемые
""""""""""""

Встраиваемая СУБД — СУБД, которая может поставляться как составная часть некоторого программного продукта,
не требуя процедуры самостоятельной установки.
Встраиваемая СУБД предназначена для локального хранения данных своего приложения и не
рассчитана на коллективное использование в сети.
Физически встраиваемая СУБД чаще всего реализована в виде подключаемой библиотеки.
Доступ к данным со стороны приложения может происходить через SQL либо через специальные
программные интерфейсы (API).

Примеры: OpenEdge, SQLite, BerkeleyDB, Firebird Embedded, Microsoft SQL Server Compact, ЛИНТЕР.


Стратегии работы с внешней памятью
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

* СУБД с непосредственной записью — это СУБД,
  в которых все измененные блоки данных незамедлительно записываются во внешнюю память
  при поступлении сигнала подтверждения любой транзакции.
  Такая стратегия используется только при высокой эффективности внешней памяти.

* СУБД с отложенной записью — это СУБД, в которых изменения аккумулируются в буферах
  внешней памяти до наступления любого из следующих событий:

    * контрольной точки;
    * конец пространства во внешней памяти, отведенное под журнал.
      СУБД выполняет контрольную точку и начинает писать журнал сначала, затирая предыдущую информацию;
    * останов. СУБД ждёт, когда всё содержимое всех буферов внешней памяти будет перенесено во внешнюю
      память, после чего делает отметки, что останов базы данных выполнен корректно;
    * при нехватке оперативной памяти для буферов внешней памяти.

Такая стратегия позволяет избежать частого обмена с внешней памятью и значительно увеличить
эффективность работы СУБД.
